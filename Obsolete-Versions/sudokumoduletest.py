Grid = [[5, ' ', 7, ' ', ' ', ' ', ' ', 4, ' '], [' ', 6, ' ', 7, ' ', 8, ' ', ' ', 9], [' ', ' ', 1, ' ', 8, ' ', ' ', ' ', ' '], [' ', 2, ' ', 4, ' ', 5, ' ', 6, ' '], [' ', 7, ' ', 8, ' ', ' ', 9, ' ', ' '], [5, ' ', ' ', 3, ' ', ' ', 2, ' ', 7], [' ', 2, ' ', ' ', 4, ' ', 3, ' ', 9], [9, ' ', 9, ' ', ' ', 6, ' ', 4, ' '], [' ', 6, ' ', 3, 6, 7, 5, 4, 6]]
Guess = [[[1, 2, 3, 6, 8], [1, 3, 8, 9], [2, 3, 6, 8], [1, 2, 6, 9], [1, 2, 3, 9], [1, 2, 3, 9], [1, 6, 8], [1, 2, 3, 8, 9], [1, 2, 3, 8]], [[1, 2, 3, 4], [1, 3, 4, 5], [2, 3, 4, 5], [1, 2, 5], [1, 2, 3, 5], [1, 2, 3, 4], [1, 4], [1, 2, 3, 5], [1, 2, 3, 4, 5]], [[2, 3, 4, 6, 7], [3, 4, 5, 9], [2, 3, 4, 5, 6], [2, 5, 6, 9], [2, 3, 5, 7, 9], [2, 3, 4, 9], [4, 6, 7], [2, 3, 5, 7, 9], [2, 3, 4, 5]], [[1, 3, 7, 8], [1, 3, 8, 9], [3, 8], [1, 9], [1, 3, 7, 9], [1, 3, 9], [1, 7, 8], [1, 3, 7, 8, 9], [1, 3, 8]], [[1, 2, 3, 4, 6], [1, 3, 4, 5], [2, 3, 4, 5, 6], [1, 2, 5, 6], [1, 2, 3, 5], [1, 2, 3, 4], [1, 4, 6], [1, 2, 3, 5], [1, 2, 3, 4, 5]], [[1, 4, 6, 8], [1, 4, 8, 9], [4, 6, 8], [1, 6, 9], [1, 9], [1, 4, 9], [1, 4, 6, 8], [1, 8, 9], [1, 4, 8]], [[1, 6, 7, 8], [1, 5, 8], [5, 6, 8], [1, 5, 6], [1, 5, 7], [1], [1, 6, 7, 8], [1, 5, 7, 8], [1, 5, 8]], [[1, 2, 3, 7, 8], [1, 3, 5, 8], [2, 3, 5, 8], [1, 2, 5], [1, 2, 3, 5, 7], [1, 2, 3], [1, 7, 8], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 8]], [[1, 2, 8], [1, 8, 9], [2, 8], [1, 2, 9], [1, 2, 9], [1, 2, 9], [1, 8], [1, 2, 8, 9], [1, 2, 8]]]

def encode_TBT (list_To_Convert):
    #do it in three chunks
    for box_Row in range (0,3):
        #for each chunk, dealing with three grid rows
        for grid_Row in range (0,3):
            #for each grid row dealing with three boxes that the data has to go into:
            for box_Num in range (0,3):
                if (box_Num+1) % 3 == 1: # ths will be box one as 0+1 %3 = 1
                    print("Box One  " , str(box_Row*3 + box_Num + grid_Row), str(box_Row*3 + box_Num))
                elif (box_Num + 1)%3 == 2: # this will be filling box two
                    print("Box Two  " , str(box_Row*3 + box_Num + grid_Row), str(box_Row*3 + box_Num))
                else:
                    print("Box Three" , str(box_Row*3 + box_Num + grid_Row), str(box_Row*3 + box_Num))

encode_TBT (Grid)

#each box's index withi the box list (final list) can be given by [[box_Row*3 + box_Num]]
